---
import { marked } from "marked";

import { type Work } from "@/lib/types";
import DirectusImage from "@/components/ui/DirectusImage.astro";
import UpperRight from "@/components/ui/icons/UpperRight.astro";

interface Props {
  work: Work;
}

const { work } = Astro.props;
console.log(work);
const taxonomyClasses = work.taxonomy
  ?.map((t) =>
    typeof t === "number"
      ? `${t}`
      : typeof t === "object" && t.taxonomy_id
        ? `${t.taxonomy_id}`
        : ``,
  )
  .join(",");

const seriesClasses = work.series
  ?.map((s) =>
    typeof s === "number"
      ? `${s}`
      : typeof s === "object" && s.series_id
        ? `${s.series_id}`
        : ``,
  )
  .join(",");

const mediumClasses = work.medium_category
  ?.map((m) =>
    typeof m === "number"
      ? `${m}`
      : typeof m === "object" && m.medium_id
        ? `${m.medium_id}`
        : ``,
  )
  .join(",");
---

<div
  data-work
  data-id={work.id}
  data-taxonomies={taxonomyClasses?.length ? taxonomyClasses : undefined}
  data-series={seriesClasses?.length ? seriesClasses : undefined}
  data-mediums={mediumClasses?.length ? mediumClasses : undefined}
>
  <button>
    <figure style=`--width-scale: ${Math.random() * .5 + .75}`>
      {
        work.primary_view ? (
          <DirectusImage asset={work.primary_view} alt={work.title} />
        ) : (
          <div data-missing-image />
        )
      }
    </figure>
  </button>
  <article>
    <p class="mono strong" set:html={marked.parseInline(work.title)} />
    <div><UpperRight /></div>
  </article>
</div>

<style>
  div[data-work] {
    padding: var(--spacing--base);
    width: min-content;

    figure {
      --baseline-width: calc(var(--spacing--base) * 20);
      img {
        max-inline-size: calc(var(--width-scale, 1) * var(--baseline-width));
        height: auto;
      }

      div[data-missing-image] {
        width: var(--baseline-width);
        aspect-ratio: 4 / 3;
        background-color: var(--color-grey);
      }
    }
    &.filtered {
      opacity: 0.2;
    }
    &.selected {
      outline: 1px solid var(--color-white);

      article {
        display: flex;
      }
    }

    article {
      margin-top: calc(0.5 * var(--spacing--base));
      display: none;
      justify-content: space-between;
      gap: calc(0.5 * var(--spacing--base));

      p {
        text-transform: uppercase;
      }

      p + div {
        fill: var(--color-white);
      }
    }
  }
</style>
