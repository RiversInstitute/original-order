---
import { marked } from "marked";

import { type Work } from "@/lib/types";
import DirectusImage from "@/components/ui/DirectusImage.astro";
import UpperRight from "@/components/ui/icons/UpperRight.astro";

interface Props {
  work: Work;
}

const { work } = Astro.props;
console.log(work);
const taxonomyClasses = work.taxonomy
  ?.map((t) =>
    typeof t === "number"
      ? `${t}`
      : typeof t === "object" && t.taxonomy_id
        ? `${t.taxonomy_id}`
        : ``,
  )
  .join(",");

const seriesClasses = work.series
  ?.map((s) =>
    typeof s === "number"
      ? `${s}`
      : typeof s === "object" && s.series_id
        ? `${s.series_id}`
        : ``,
  )
  .join(",");

const mediumClasses = work.medium_category
  ?.map((m) =>
    typeof m === "number"
      ? `${m}`
      : typeof m === "object" && m.medium_id
        ? `${m.medium_id}`
        : ``,
  )
  .join(",");
---

<div
  data-work
  data-id={work.id}
  data-taxonomies={taxonomyClasses?.length ? taxonomyClasses : undefined}
  data-series={seriesClasses?.length ? seriesClasses : undefined}
  data-mediums={mediumClasses?.length ? mediumClasses : undefined}
>
  <button data-open aria-label={`View details for ${work.title}`} type="button">
    <figure style=`--width-scale: ${Math.random() * .5 + .75}`>
      {
        work.primary_view ? (
          <DirectusImage asset={work.primary_view} alt={work.title} />
        ) : (
          <div data-missing-image />
        )
      }
    </figure>
    <div data-caption>
      <p class="mono strong" set:html={marked.parseInline(work.title)} />
      <div><UpperRight /></div>
    </div>
  </button>
  <article>
    <button data-close aria-label="Close details">
      <svg
        width="11"
        height="11"
        viewBox="0 0 11 11"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <svg
          width="11"
          height="11"
          viewBox="0 0 11 11"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
          aria-hidden="true"
        >
          <path
            d="M9.30176 1.09399C9.37793 1.01782 9.46257 0.969157 9.55566 0.947998C9.65299 0.922607 9.75033 0.922607 9.84766 0.947998C9.94499 0.969157 10.0317 1.01782 10.1079 1.09399C10.1799 1.16593 10.2285 1.25057 10.2539 1.3479C10.2793 1.44523 10.2793 1.54256 10.2539 1.63989C10.2285 1.73722 10.1799 1.82186 10.1079 1.8938L1.17676 10.825C1.10482 10.8969 1.02018 10.9456 0.922852 10.9709C0.825521 10.9963 0.72819 10.9963 0.630859 10.9709C0.533529 10.9456 0.446777 10.8969 0.370605 10.825C0.294434 10.753 0.243652 10.6684 0.218262 10.571C0.197103 10.4737 0.199219 10.3764 0.224609 10.2791C0.25 10.1817 0.298665 10.0971 0.370605 10.0251L9.30176 1.09399ZM10.1079 10.0251C10.1799 10.0971 10.2264 10.1817 10.2476 10.2791C10.2729 10.3764 10.2729 10.4737 10.2476 10.571C10.2264 10.6684 10.1799 10.753 10.1079 10.825C10.036 10.9011 9.94922 10.9498 9.84766 10.9709C9.75033 10.9963 9.65299 10.9963 9.55566 10.9709C9.45833 10.9456 9.3737 10.8969 9.30176 10.825L0.370605 1.8938C0.298665 1.82186 0.25 1.73722 0.224609 1.63989C0.203451 1.54256 0.203451 1.44523 0.224609 1.3479C0.25 1.25057 0.298665 1.16593 0.370605 1.09399C0.442546 1.01782 0.527181 0.969157 0.624512 0.947998C0.721842 0.922607 0.819173 0.922607 0.916504 0.947998C1.01807 0.969157 1.10482 1.01782 1.17676 1.09399L10.1079 10.0251Z"
          ></path>
        </svg>
      </svg></button
    >
    <div class="details">
      <h2 class="strong" set:html={marked.parseInline(work.title)} />
      <p>{work.year}</p>
      {
        work.description ? (
          <div set:html={marked.parse(work.description)} />
        ) : null
      }
      <p class="mono">{work.inventory_id}</p>
    </div>
  </article>
</div>

<style>
  div[data-work] {
    padding: var(--spacing--base);
    width: min-content;

    figure {
      --baseline-width: calc(var(--spacing--base) * 20);
      img {
        max-inline-size: calc(var(--width-scale, 1) * var(--baseline-width));
        height: auto;
      }

      div[data-missing-image] {
        width: var(--baseline-width);
        aspect-ratio: 4 / 3;
        background-color: var(--color-grey);
      }
    }
    &.filtered {
      opacity: 0.2;
    }
    &.selected {
      outline: 1px solid var(--color-white);

      div[data-caption] {
        display: flex;
      }
    }

    &.expanded {
      article {
        display: flex;
      }
    }

    div[data-caption] {
      margin-top: calc(0.5 * var(--spacing--base));
      display: none;
      justify-content: space-between;
      gap: calc(0.5 * var(--spacing--base));

      p {
        text-transform: uppercase;
      }

      p + div {
        fill: var(--color-white);
      }
    }

    article {
      display: none;
      position: fixed;
      inset: 0;
      background-color: #000000dd;
      z-index: 200;

      justify-content: center;
      align-items: center;

      button {
        position: absolute;
        top: var(--spacing--base);
        right: var(--spacing--base);
        svg {
          width: calc(1 * var(--spacing--base));
          stroke: var(--color-white);
        }
      }

      .details {
        outline: 1px solid var(--color-white);
        padding: calc(1 * var(--spacing--base));
        display: flex;
        flex-direction: column;
        gap: calc(0.5 * var(--spacing--base));
      }
    }
  }
</style>
