---
import Layout from "@/layouts/Layout.astro";
import Nav from "@/components/Nav.astro";
import ContentWrapper from "@/components/ContentWrapper.astro";
import TagNav from "@/components/TagNav.astro";

import { readItem, readItems } from "@directus/sdk";
import { Client } from "@/lib/directus";
import Markdown from "@/components/ui/Markdown.astro";
import WorkGrid from "@/components/ui/WorkGrid.astro";

const { id } = Astro.params;

if (id === undefined) {
  return new Response(null, { status: 404 });
}

let series;
let works;

try {
  series = await Client.request(readItem("series", parseInt(id), {}));
  works = await Client.request(
    readItems("works", {
      filter: {
        status: { _eq: "published" },
        series: { series_id: { _eq: parseInt(id) } },
      },
      fields: [
        "*",
        { primary_view: ["id", "width", "height"] },
        { taxonomy: ["taxonomy_id"] },
        { series: ["series_id"] },
        { medium_category: ["medium_id"] },
      ],
      limit: -1,
    }),
  );
} catch (e) {
  return new Response(null, { status: 404 });
}
---

<Layout pageTitle={series.title}>
  <Nav />
  <ContentWrapper>
    <TagNav activeTag="series" />
    <h2 class="mono"><strong>{series.title}</strong></h2>
    {
      series.description ? (
        <div>
          <Markdown content={series.description} />
        </div>
      ) : null
    }
    <div>
      {works && <WorkGrid works={works} />}
    </div>
  </ContentWrapper>
</Layout>

<style>
  h2 {
    padding: calc(0.5 * var(--spacing--base));
    align-self: start;
    background-color: var(--color-filter-series);
    text-wrap: pretty;
  }
  div {
    margin-top: calc(2 * var(--spacing--base));
  }
</style>
